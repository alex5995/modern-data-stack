# Configuration for airbyte/source-postgres
# Documentation about this connector can be found at https://docs.airbyte.com/integrations/sources/postgres
resource_name: "pg_customers"
definition_type: source
definition_id: decd338e-5647-4c0b-adf4-da0e75f5a750
definition_image: airbyte/source-postgres
definition_version: 1.0.34

# EDIT THE CONFIGURATION BELOW!
configuration:
  ssl: false # OPTIONAL | boolean | Encrypt data using SSL. When activating SSL, please select one of the connection modes.
  host: localhost # REQUIRED | string | Hostname of the database.
  port: 5432 # REQUIRED | integer | Port of the database. | Example: 5432
  schemas: ["public"] # OPTIONAL | array | The list of schemas (case sensitive) to sync from. Defaults to public.
  database: postgres # REQUIRED | string | Name of the database.
  password: ${PG_CUSTOMERS_PASSWORD} # SECRET (please store in environment variables) | OPTIONAL | string | Password associated with the username.
  ssl_mode:
    ## -------- Pick one valid structure among the examples below: --------
    mode: "disable" # REQUIRED | string
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "allow" # REQUIRED | string
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "prefer" # REQUIRED | string
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "require" # REQUIRED | string
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "verify-ca" # REQUIRED | string
    # client_key: ${CLIENT_KEY} # SECRET (please store in environment variables) | OPTIONAL | string | Client key
    # ca_certificate: ${CA_CERTIFICATE} # SECRET (please store in environment variables) | REQUIRED | string | CA certificate
    # client_certificate: ${CLIENT_CERTIFICATE} # SECRET (please store in environment variables) | OPTIONAL | string | Client certificate
    # client_key_password: ${CLIENT_KEY_PASSWORD} # SECRET (please store in environment variables) | OPTIONAL | string | Password for keystorage. If you do not add it - the password will be generated automatically.
    ## -------- Another valid structure for ssl_mode: --------
    # mode: "verify-full" # REQUIRED | string
    # client_key: ${CLIENT_KEY} # SECRET (please store in environment variables) | OPTIONAL | string | Client key
    # ca_certificate: ${CA_CERTIFICATE} # SECRET (please store in environment variables) | REQUIRED | string | CA certificate
    # client_certificate: ${CLIENT_CERTIFICATE} # SECRET (please store in environment variables) | OPTIONAL | string | Client certificate
    # client_key_password: ${CLIENT_KEY_PASSWORD} # SECRET (please store in environment variables) | OPTIONAL | string | Password for keystorage. If you do not add it - the password will be generated automatically.
  username: postgres # REQUIRED | string | Username to access the database.
  tunnel_method:
    ## -------- Pick one valid structure among the examples below: --------
    tunnel_method: "NO_TUNNEL" # REQUIRED | string | No ssh tunnel needed to connect to database
    ## -------- Another valid structure for tunnel_method: --------
    # ssh_key: ${SSH_KEY} # SECRET (please store in environment variables) | REQUIRED | string | OS-level user account ssh key credentials in RSA PEM format ( created with ssh-keygen -t rsa -m PEM -f myuser_rsa )
    # tunnel_host: # REQUIRED | string | Hostname of the jump server host that allows inbound ssh tunnel.
    # tunnel_port: 22 # REQUIRED | integer | Port on the proxy/jump server that accepts inbound ssh connections. | Example: 22
    # tunnel_user: # REQUIRED | string | OS-level username for logging into the jump server host.
    # tunnel_method: "SSH_KEY_AUTH" # REQUIRED | string | Connect through a jump server tunnel host using username and ssh key
    ## -------- Another valid structure for tunnel_method: --------
    # tunnel_host: # REQUIRED | string | Hostname of the jump server host that allows inbound ssh tunnel.
    # tunnel_port: 22 # REQUIRED | integer | Port on the proxy/jump server that accepts inbound ssh connections. | Example: 22
    # tunnel_user: # REQUIRED | string | OS-level username for logging into the jump server host
    # tunnel_method: "SSH_PASSWORD_AUTH" # REQUIRED | string | Connect through a jump server tunnel host using username and password authentication
    # tunnel_user_password: ${TUNNEL_USER_PASSWORD} # SECRET (please store in environment variables) | REQUIRED | string | OS-level password for logging into the jump server host
  # jdbc_url_params: # OPTIONAL | string | Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about <a href="https://jdbc.postgresql.org/documentation/head/connect.html">JDBC URL parameters</a>.
  replication_method:
    ## -------- Pick one valid structure among the examples below: --------
    method: "Standard" # REQUIRED | string
    ## -------- Another valid structure for replication_method: --------
    # method: "CDC" # REQUIRED | string
    # plugin: "pgoutput" # OPTIONAL | string | A logical decoding plugin installed on the PostgreSQL server. The `pgoutput` plugin is used by default. If the replication table contains a lot of big jsonb values it is recommended to use `wal2json` plugin. Read more about <a href="https://docs.airbyte.com/integrations/sources/postgres#step-2-select-a-replication-plugin">selecting replication plugins</a>.
    # publication: # REQUIRED | string | A Postgres publication used for consuming changes. Read about <a href="https://docs.airbyte.com/integrations/sources/postgres#step-4-create-publications-and-replication-identities-for-tables">publications and replication identities</a>.
    # replication_slot: # REQUIRED | string | A plugin logical replication slot. Read about <a href="https://docs.airbyte.com/integrations/sources/postgres#step-3-create-replication-slot">replication slots</a>.
    # initial_waiting_seconds: 300 # OPTIONAL | integer | The amount of time the connector will wait when it launches to determine if there is new data to sync or not. Defaults to 300 seconds. Valid range: 120 seconds to 1200 seconds. Read about <a href="https://docs.airbyte.com/integrations/sources/postgres#step-5-optional-set-up-initial-waiting-time">initial waiting time</a>.
